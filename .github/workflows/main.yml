# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build_and_test:
    name: Run all tests and build artifacts
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        id: rust

      - name: Cache cargo build
        uses: actions/cache@v4
        with:
          path: |
            target
            ~/.cargo/registry
            ~/.cargo/git
          key: rust-cache-${{ steps.rust.outputs.cachekey }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            rust-cache-${{ steps.rust.outputs.cachekey }}-

      - name: Install SQLX-tooling
        uses: baptiste0928/cargo-install@v3.0.1
        with:
          crate: sqlx-cli
          version: latest

      - name: Setup Database
        run: scripts/setup-fresh-database.sh

      - name: Run all rust tests in the cargo workspace
        run: cargo test --release

      - name: Compile Frontend
        run: scripts/compile-frontend.sh

      - name: Create artifact deploy.tar.gz for deployment
        run: scripts/package-artifact.sh

      - name: Publish artifact
        uses: actions/upload-artifact@v4
        with:
          name: deploy
          path: deploy.tar.gz

  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-24.04
    if: github.ref == 'refs/heads/master'
    needs: [ build_and_test ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check out deployment artifact
        uses: actions/download-artifact@v4
        with:
          name: deploy

      - name: Setup SSH Keys and known_hosts
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          mkdir -p ~/.ssh
          ssh-add - <<< "${{ secrets.DEPLOYMENT_KEY }}"
          touch ~/.ssh/known_hosts
          cat scripts/known_hosts >> ~/.ssh/known_hosts

      - name: Upload to pacoplacy.com host
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          scp -v deploy.tar.gz pacosako@pacoplay.com:~
          ssh -t pacosako@pacoplay.com "./update-stage.sh"
